#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jun 19 10:08:13 2019

@author: andres
"""

from matplotlib import pyplot  as plt
import numpy as np

data='''200
0.118
6.0
400
0.1839
0.38
205
0.118
4.3
405
0.1886
0.36
210
0.118
3.9
410
0.1933
0.34
215
0.120
3.7
415
0.1973
0.34
220
0.1221
1.2
420
0.2015
0.32
225
0.1232
1.2
425
0.2054
0.32
230
0.1274
1.3
430
0.2094
0.30
235
0.1336
1.2
435
0.2131
0.28
240
0.1336
1.2
440
0.2166
0.28
245
0.1299
1.2
445
0.2203
0.26
250
0.1249
1.3
450
0.2236
0.24
255
0.1188
1.2
455
0.2272
0.24
260
0.1134
1.2
460
0.2305
0.24
265
0.1078
1.1
465
0.2339
0.22
270
0.1027
1.1
470
0.2371
0.22
275
0.1020
1.1
475
0.2403
0.22
280
0.1052
1.1
480
0.2435
0.22
285
0.1109
1.2
485
0.2467
0.22
290
0.1180
1.1
490
0.2498
0.22
295
0.1269
1.1
495
0.2529
0.22
300
0.1340
1.1
500
0.2560
0.22
305
0.1384
1.1
505
0.2591
0.22
310
0.1414
1.0
510
0.2621
0.22
315
0.1440
1.0
515
0.2651
0.20
320
0.1462
1.1
520
0.2682
0.20
325
0.1480
1.1
525
0.2712
0.20
330
0.1497
1.1
530
0.2741
0.20
335
0.1512
1.1
535
0.2771
0.20
340
0.1526
1.1
540
0.2801
0.20
345
0.1532
1.1
545
0.2830
0.20
350
0.1523
0.56
550
0.2860
0.20
355
0.1515
0.54
555
0.2889
0.20
360
0.1492
0.50
560
0.2918
0.20
365
0.1476
0.48
565
0.2947
0.20
370
0.1491
0.48
570
0.2976
0.20
375
0.1537
0.46
575
0.3005
0.20
380
0.1603
0.46
580
0.3034
0.20
385
0.1672
0.42
585
0.3062
0.20
390
0.1731
0.40
590
0.3091
0.20
395
0.1789
0.40
595
0.3120
0.20
600
0.3148
0.20
800
0.4261
0.20
605
0.3177
0.20
805
0.4288
0.20
610
0.3205
0.20
810
0.4316
0.20
615
0.3233
0.20
815
0.4343
0.20
620
0.3261
0.20
820
0.4371
0.20
625
0.3290
0.20
825
0.4398
0.20
630
0.3318
0.20
830
0.4426
0.20
635
0.3346
0.20
835
0.4453
0.20
640
0.3374
0.20
840
0.4480
0.20
645
0.3402
0.20
845
0.4507
0.20
650
0.3430
0.20
850
0.4535
0.20
655
0.3458
0.20
855
0.4562
0.20
660
0.3486
0.20
860
0.4589
0.20
665
0.3514
0.20
865
0.4617
0.20
670
0.3542
0.20
870
0.4644
0.20
675
0.3570
0.20
875
0.4672
0.20
680
0.3598
0.20
880
0.4699
0.20
685
0.3626
0.20
885
0.4726
0.20
690
0.3653
0.20
890
0.4753
0.20
695
0.3681
0.20
895
0.4781
0.20
700
0.3709
0.20
900
0.4808
0.20
705
0.3737
0.20
905
0.4835
0.20
710
0.3764
0.20
910
0.4862
0.20
715
0.3792
0.20
915
0.4888
0.20
720
0.3820
0.20
920
0.4915
0.20
725
0.3847
0.20
925
0.4941
0.20
730
0.3875
0.20
930
0.4967
0.20
735
0.3903
0.20
935
0.4990
0.20
740
0.3930
0.20
940
0.5014
0.20
745
0.3958
0.20
945
0.5035
0.20
750
0.3986
0.20
950
0.5055
0.20
755
0.4013
0.20
955
0.508
0.66
760
0.4041
0.20
960
0.509
0.72
765
0.4068
0.20
965
0.511
0.76
770
0.4096
0.20
970
0.511
0.82
775
0.4123
0.20
975
0.510
0.88
780
0.4151
0.20
980
0.509
0.94
785
0.4179
0.20
985
0.507
1.0
790
0.4206
0.20
990
0.504
1.0
795
0.4234
0.20
995
0.499
1.1
1000
0.493
1.2
1050
0.326
2.0
1005
0.486
1.2
1055
0.300
2.1
1010
0.476
1.3
1060
0.272
2.2
1015
0.465
1.4
1065
0.247
2.3
1020
0.451
1.4
1070
0.227
2.4
1025
0.436
1.5
1075
0.209
2.5
1030
0.418
1.6
1080
0.192
2.6
1035
0.397
1.7
1085
0.175
2.7
1040
0.375
1.8
1090
0.160
2.8
1045
0.352
1.9
1095
0.145
2.9
1100
0.130
2.9
'''
wl_dict=dict()

lbd=[]
pwr=[]
error=[]


i=0
for one in data.split():
    if i==0:
        wl = int(one)
        lbd.append(wl)
        i = i+1
    elif i==1:
        pow = float(one)
        pwr.append(pow)
        i = i+1
    elif i==2:
        err = float(one)
        error.append(err)
        i=0
        wl_dict[wl]=(pow, err)

# print(wl_dict)
print('Wavelength (power, err): {} nm ({} A/W +/- {}%)'.format(500, wl_dict[500][0], wl_dict[500][1]))


plt.plot(lbd,pwr,'+b',label='Courbe caract√©ristique photodiode S2281')
plt.xlabel(r'$\lambda$ (nm)')
plt.ylabel('Conversion')
plt.legend()
plt.show()

x2=list(np.copy(lbd))

def val(wlgt,lbd,pwr,x2):
    for i in range(len(x2)):
        if lbd[i]==wlgt:
            return (wlgt,(pwr[lbd.index(wlgt)]))
        
    x3=list(np.zeros(len(x2)))
    for i in range(len(x2)):
        x3[i]=x2[i]-wlgt
        x3[i]=abs(x3[i])
    a=min(x3)
    idxa=x3.index(a)
    ya=pwr[idxa]
    xa=x2[idxa] 
    x3[idxa]=2000
    b=np.min(np.abs(x3))
    idxb=x3.index(b)
    yb=pwr[idxb]
    xb=x2[idxb]
    t=ya-((yb-ya)/(xb-xa))*xa
    return (wlgt,((yb-ya)/(xb-xa))*wlgt + t)

print(val(1000,lbd,pwr,x2))
print(val(1001,lbd,pwr,x2))
print(val(1004,lbd,pwr,x2))

tableau=np.zeros((len(lbd),3))
for i in range(len(lbd)):
    tableau[i,0]=lbd[i]
    tableau[i,1]=pwr[i]
    tableau[i,2]=error[i]

    